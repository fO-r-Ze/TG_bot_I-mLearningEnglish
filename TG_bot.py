import telebot
from telebot import types

from psql_config import *
from common_config import load_data_from_file

"""
–ú–æ–¥—É–ª—å —Ä–µ–∞–ª–∏–∑—É–µ—Ç Telegram-–±–æ—Ç–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –ø—É—Ç–µ–º –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–ª–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
- handle_start(message): –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É '/start'.
- process_name_input(message): –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞.
- ask_question(cid): –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–≤–æ–¥ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–ª–æ–≤–∞.
- show_menu(cid): –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å –≤—ã–±–æ—Ä–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å–ª–æ–≤–∞.
- handle_response(message): –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞.
- increment_count(cid, target_word): –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞.
- handle_add_word(message): –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞ –≤ —Å–ª–æ–≤–∞—Ä—å.
- process_add_word(message): –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞.
- handle_del_word(message): –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è.
- process_del_word(message): –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–∫—Ç —É–¥–∞–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞.

–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏:
- @bot.message_handler(commands=['start']): –ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
- @bot.message_handler(func=lambda message: message.text.strip() != "–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ \"+\"" and message.text.strip() != "–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ \"-\"" and message.text.strip() != "–î–∞–ª—å—à–µ ‚è≠"): –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
- @bot.message_handler(func=lambda message: message.text.startswith("–î–æ–±–∞–≤–∏—Ç—å")): –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞.
- @bot.message_handler(func=lambda message: message.text.startswith("–£–¥–∞–ª–∏—Ç—å")): –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞.
- @bot.message_handler(func=lambda message: message.text.startswith("–î–∞–ª—å—à–µ")): –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É.
"""

# –†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π:
# - –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –ë–î (create_tables(engine))
# - –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—é –ë–î —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ insert_data(russian_words)

token_TG = load_data_from_file('token_TG.txt')
bot = telebot.TeleBot(token_TG)

current_question = {}

@bot.message_handler(commands=['start'])
def handle_start(message):
    cid = message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    existing_user = session.query(Users).filter_by(telegram_id=cid).first()

    if not existing_user:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –∏–º—è
        msg = bot.send_message(cid, "–ü—Ä–∏–≤–µ—Ç üëã\n\n–î–∞–≤–∞–π –ø–æ–ø—Ä–∞–∫—Ç–∏–∫—É–µ–º—Å—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ\\!\n\n"
                              "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –º–æ–∂–µ—à—å –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è —Å–µ–±—è —Ç–µ–º–ø–µ\\.\n\n"
                              "–£ —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–µ–Ω–∞–∂—ë—Ä, –∫–∞–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä\\, —Ç–∞–∫ –∏ —Å–æ–±–∏—Ä–∞—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –±–∞–∑—É –¥–ª—è –æ–±—É—á–µ–Ω–∏—è\\.\n\n"
                              "\\*–î–ª—è —ç—Ç–æ–≥–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏:\\* \n"
                              "\\- –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï\n"
                              "\\- —É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ ‚ùå\\.\n\n"
                              "–ù—É —á—Ç–æ, –Ω–∞—á–Ω—ë–º\\? –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç\\? ", parse_mode="MarkdownV2")
        bot.register_next_step_handler(msg, process_name_input)
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑–≤–µ—Å—Ç–µ–Ω, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –µ–≥–æ –ø–æ –∏–º–µ–Ω–∏
        greeting_message = f"Hello, {existing_user.name.title()}, let's continue learning English..."
        bot.send_message(cid, greeting_message)

        # –ù–∞—á–∏–Ω–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ —Å –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        ask_question(cid)

def process_name_input(message):
    cid = message.chat.id
    user_name = message.text.strip()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤–≤–µ–¥—ë–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º
    add_user(cid, user_name=user_name.title())

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏
    greeting_message = f"Nice to meet you, {user_name.title()}! Let's start learning English..."
    bot.send_message(cid, greeting_message)

    # –ù–∞—á–∏–Ω–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ —Å –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    ask_question(cid)

def ask_question(cid):
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Ü–µ–ª–µ–≤–æ–µ —Å–ª–æ–≤–æ
    target_word = random_target_word(cid)
    translated_word = translate_target_word(target_word).title()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    current_question[cid] = {'target_word': target_word, 'translated_word': translated_word}

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    show_menu(cid)

def show_menu(cid):
    markup = types.ReplyKeyboardMarkup(row_width=2)

    # –ë–µ—Ä–µ–º —Ç–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ –∏–∑ –ø–∞–º—è—Ç–∏
    target_word = current_question[cid]['target_word']
    translated_word = current_question[cid]['translated_word']

    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞
    target_word_btn = types.KeyboardButton(translated_word)

    # –î—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã
    others = other_words()
    other_words_btns = [types.KeyboardButton(word.title()) for word in others]

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏—Ö
    buttons = [target_word_btn] + other_words_btns
    random.shuffle(buttons)

    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ "/add_word" –∏ "/del_word"
    add_word_btn = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ "+" ')
    del_word_btn = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ "-" ')
    next_btn = types.KeyboardButton('–î–∞–ª—å—à–µ ‚è≠')
    buttons.extend([add_word_btn, del_word_btn, next_btn])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
    for i in range(0, len(buttons), 2):
        row_buttons = buttons[i:i+2]
        markup.row(*row_buttons)

    greeting = f"–í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞:\nüá∑üá∫ {target_word.title()}"
    bot.send_message(cid, greeting, reply_markup=markup)


@bot.message_handler(func=lambda message: message.text.strip() != "–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ \"+\"" and
                                        message.text.strip() != "–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ \"-\"" and
                                        message.text.strip() != "–î–∞–ª—å—à–µ ‚è≠")


def handle_response(message):
    cid = message.chat.id

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ –∏ –ø–µ—Ä–µ–≤–æ–¥ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    target_word = current_question.get(cid, {}).get('target_word')
    correct_translation = current_question.get(cid, {}).get('translated_word')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞—é—Ç –ª–∏ –Ω–∞–∂–∞—Ç–∞—è –∫–Ω–æ–ø–∫–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–µ—Ä–µ–≤–æ–¥–æ–º
    if message.text.strip().lower() == correct_translation.lower():
        # –û—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!
        increment_count(cid, target_word)
        bot.send_message(cid, "üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–æ–≤—É.")
        # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        del current_question[cid]
        ask_question(cid)  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    elif message.text.strip().lower() != correct_translation:
        # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        bot.send_message(cid, "‚ùó –û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        # –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–µ–∂–Ω–∏–π –≤–æ–ø—Ä–æ—Å
    else:
        bot.send_message(cid, "–û–π, –ø–æ—Ö–æ–∂–µ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞.")
        ask_question(cid)
        return

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞
def increment_count(cid, target_word):
    with session.no_autoflush:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = session.query(Users).filter_by(telegram_id=str(cid)).first()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–æ
        word_obj = session.query(Words).filter_by(russian_word=target_word).first()

        # –ü–æ–ª—É—á–∞–µ–º —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–ª–æ–≤–∞
        user_word_link = session.query(UserWords).filter_by(user_id=user.id, word_id=word_obj.id).first()

        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        user_word_link.count += 1
        session.commit()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ"
@bot.message_handler(func=lambda message: message.text.startswith("–î–æ–±–∞–≤–∏—Ç—å"))

def handle_add_word(message):
    cid = message.chat.id

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ª–æ–≤–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    msg = bot.send_message(cid, "–í–≤–µ–¥–∏—Ç–µ —Ä—É—Å—Å–∫–æ–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ª–æ–≤–∞—Ä—å:")
    bot.register_next_step_handler(msg, process_add_word)

def process_add_word(message):
    cid = message.chat.id
    word = message.text.strip()

    success, translated_word = add_word(cid, word)

    if success:
        # –ü–æ–ª—É—á–∏–ª–∏ —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø–µ—Ä–µ–≤–æ–¥
        num_words = get_user_word_count(cid)
        bot.send_message(cid, f"–°–ª–æ–≤–æ '{word.title()} / {translated_word.title()}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ. –í—Å–µ–≥–æ —Å–ª–æ–≤ –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ: {num_words}")
    elif translated_word is not None:
        # –°–ª—É—á–∞–π, –∫–æ–≥–¥–∞ —Å–ª–æ–≤–æ —É–∂–µ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ
        bot.send_message(cid,f"–°–ª–æ–≤–æ '{word.title()} / {translated_word.title()}' —É–∂–µ –µ—Å—Ç—å –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ.")
    else:
        # –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–ª–∏ –¥—Ä—É–≥–æ–µ —É—Å–ª–æ–≤–∏–µ –Ω–µ—É–¥–∞—á–∏
        bot.send_message(cid, f"–ü–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ '{word.title()}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤–∏—Ç—å —Ç–∞–∫–æ–µ —Å–ª–æ–≤–æ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.")

    return ask_question(cid)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ"
@bot.message_handler(func=lambda message: message.text.startswith("–£–¥–∞–ª–∏—Ç—å"))
def handle_del_word(message):
    cid = message.chat.id

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ª–æ–≤–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    msg = bot.send_message(cid, "–í–≤–µ–¥–∏—Ç–µ —Ä—É—Å—Å–∫–æ–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ª–æ–≤–∞—Ä—è:")
    bot.register_next_step_handler(msg, process_del_word)

def process_del_word(message):
    cid = message.chat.id
    word = message.text.strip()
    existing_word = session.query(Words).filter_by(russian_word=word.lower()).first()
    translated_word = translate(word)
    if not existing_word:
        bot.send_message(cid, f"C–ª–æ–≤–∞ '{word.title()}' –Ω–µ—Ç –≤ –í–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ")

        return ask_question(cid)

    # –£–¥–∞–ª—è–µ–º —Å–ª–æ–≤–æ
    success = del_word(cid, word)

    if success:
        # –£–∑–Ω–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        num_words = get_user_word_count(cid)
        bot.send_message(cid, f"–°–ª–æ–≤–æ '{word.title()} / {translated_word.title()}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ. –í—Å–µ–≥–æ —Å–ª–æ–≤ –≤ –í–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ: {num_words}")
    else:
        bot.send_message(cid, f"–°–ª–æ–≤–∞ '{word.title()} / {existing_word.english_word.title()}' –Ω–µ –±—ã–ª–æ –≤ –í–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ.")

    return ask_question(cid)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–∞–ª—å—à–µ"
@bot.message_handler(func=lambda message: message.text.startswith("–î–∞–ª—å—à–µ"))
def handle_del_word(message):
    cid = message.chat.id

    # –ù–∞—á–∏–Ω–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ —Å –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    ask_question(cid)

if __name__ == '__main__':
    print('Bot is running...')
    bot.polling()